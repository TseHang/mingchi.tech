{"version":3,"file":"static/webpack/static/development/pages/index.js.6b6fad4c45d12b8b4a47.hot-update.js","sources":["webpack:///./components/Header.tsx","webpack:///./hooks/useWindowScoll.ts"],"sourcesContent":["import styled from 'styled-components';\nimport { Layout } from 'antd';\nimport InlineSVG from 'react-svg';\n\nimport { getRelativePath } from '@/utils';\nimport { media } from '@/themes/helper';\nimport useWindowScroll from '@/hooks/useWindowScoll';\n\nconst Wrapper = styled(Layout.Header)`\n  position: fixed;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 55px;\n  padding: 12px ${props => props.theme.headerHorizontalPadding};\n  z-index: ${props => props.theme.z.header};\n  background-color: ${props => props.theme.colors.black};\n  border-bottom: solid 1px rgba(51, 51, 51, 0.65);\n\n  ${media('pad')} {\n    height: ${props => props.theme.headerHeight};\n  }\n`;\n\nconst LogoTitle = styled.img`\n  height: 1.5rem;\n`;\n\nconst Logo = styled(InlineSVG)`\n  svg {\n    height: 2em;\n    transform: translateY(5px);\n  }\n  g {\n    path {\n      fill: white;\n    }\n  }\n`;\n\nconst Header: React.FunctionComponent = () => {\n  const { x, y } = useWindowScroll();\n\n  console.log(x, y);\n  return (\n    <Wrapper>\n      <LogoTitle\n        src={getRelativePath('/static/logo-title.png')}\n        alt=\"logo-title\"\n      />\n      <Logo src={getRelativePath('/static/circle.svg')} />\n    </Wrapper>\n  );\n};\n\nexport default Header;","\nimport { useEffect, useRef, useState } from 'react';\n\nconst isClient = typeof window === 'object';\n\nexport type TState = {\n  x: number;\n  y: number;\n}\n\nconst useWindowScroll = (): TState => {\n  const frame = useRef(0);\n  const [state, setState] = useState<TState>({\n    x: isClient ? window.scrollX : 0,\n    y: isClient ? window.scrollY : 0,\n  });\n\n  useEffect(() => {\n    const handler = () => {\n      cancelAnimationFrame(frame.current);\n      frame.current = requestAnimationFrame(() => {\n        setState({\n          x: window.scrollX,\n          y: window.scrollY,\n        });\n      });\n    };\n\n    window.addEventListener('scroll', handler, {\n      capture: false,\n      passive: true,\n    });\n\n    return () => {\n      cancelAnimationFrame(frame.current);\n      window.removeEventListener('scroll', handler);\n    };\n  }, []);\n\n  return state;\n};\n\nexport default useWindowScroll;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAWA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAGA;AACA;AAFA;AAIA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AAEA;AACA;AAMA;AACA;AACA;AAFA;AAGA;AACA;AAFA;AAFA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;A","sourceRoot":""}
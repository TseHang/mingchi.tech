{"version":3,"file":"static/webpack/static/development/pages/index.js.ee6b582aa84c2c47ad2e.hot-update.js","sources":["webpack:///./hooks/useWindowScoll.ts"],"sourcesContent":["\nimport { useEffect, useRef, useState } from 'react';\n\nconst isClient = typeof window === 'object';\n\nexport type TState = {\n  x: number;\n  y: number;\n  oldX: number;\n  oldY: number;\n}\n\nconst useWindowScroll = (): TState => {\n  const frame = useRef(0);\n  const [state, setState] = useState<TState>({\n    x: isClient ? window.scrollX : 0,\n    y: isClient ? window.scrollY : 0,\n    oldX: isClient ? window.scrollX : 0,\n    oldY: isClient ? window.scrollY : 0,\n  });\n\n  useEffect(() => {\n    const handler = () => {\n      cancelAnimationFrame(frame.current);\n      frame.current = requestAnimationFrame(() => {\n        setState(oldState => ({\n          x: window.scrollX,\n          y: window.scrollY,\n          oldX: oldState.x,\n          oldY: oldState.y,\n        }));\n      });\n    };\n\n    window.addEventListener('scroll', handler, {\n      capture: false,\n      passive: true,\n    });\n\n    return () => {\n      cancelAnimationFrame(frame.current);\n      window.removeEventListener('scroll', handler);\n    };\n  }, []);\n\n  return state;\n};\n\nexport default useWindowScroll;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;AAEA;AACA;AAQA;AACA;AACA;AAFA;AAGA;AACA;AACA;AACA;AAJA;AAFA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;A","sourceRoot":""}
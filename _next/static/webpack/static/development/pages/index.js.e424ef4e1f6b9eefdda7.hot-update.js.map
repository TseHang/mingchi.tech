{"version":3,"file":"static/webpack/static/development/pages/index.js.e424ef4e1f6b9eefdda7.hot-update.js","sources":["webpack:///./components/Header.tsx"],"sourcesContent":["import { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { Layout } from 'antd';\nimport InlineSVG from 'react-svg';\n\nimport { getRelativePath } from '@/utils';\nimport { media } from '@/themes/helper';\nimport useWindowScroll from '@/hooks/useWindowScroll';\n\nconst Wrapper = styled(Layout.Header)<{ hide: boolean; }>`\n  position: fixed;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 55px;\n  padding: 12px ${props => props.theme.headerHorizontalPadding};\n  z-index: ${props => props.theme.z.header};\n  background-color: ${props => props.theme.colors.black};\n  border-bottom: solid 1px rgba(51, 51, 51, 0.65);\n  transition: all .2s ease-in;\n\n  ${media('pad')} {\n    height: ${props => props.theme.headerHeight};\n  }\n\n  ${p => p.hide && `\n    transform: translateY(-200%);\n  `}\n`;\n\nconst LogoTitle = styled.img`\n  height: 1.5rem;\n`;\n\nconst Logo = styled(InlineSVG)`\n  svg {\n    height: 2em;\n    transform: translateY(5px);\n  }\n  g {\n    path {\n      fill: white;\n    }\n  }\n`;\n\nconst Header: React.FunctionComponent = () => {\n  const { y, oldY } = useWindowScroll();\n  const firstSectionHeight = useMemo(() => {\n    if (y) {\n      const section = document.getElementById('launch-section');\n      console.log(123);\n      if (section) {\n        return section.offsetHeight;\n      }\n    }\n    return Infinity;\n  }, [ !!y ])\n  return (\n    <Wrapper hide={ y > firstSectionHeight && y < oldY}>\n      <LogoTitle\n        src={getRelativePath('/static/logo-title.png')}\n        alt=\"logo-title\"\n      />\n      <Logo src={getRelativePath('/static/circle.svg')} />\n    </Wrapper>\n  );\n};\n\nexport default Header;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AAGA;AAAA;AAKA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAWA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}